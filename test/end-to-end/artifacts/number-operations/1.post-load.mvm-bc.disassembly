Bytecode size: 2324 B

Addr    Size
==== =======
0000   1c  - # Header
0000       1     bytecodeVersion: 2
0001       1     headerSize: 28
0002       1     requiredEngineVersion: 2
0003       1     reserved: 0
0004       2     bytecodeSize: 2324
0006       2     expectedCRC: d3f2
0008       4     requiredFeatureFlags: 1
000c       2     BCS_IMPORT_TABLE: 001c
000e       2     BCS_EXPORT_TABLE: 0020
0010       2     BCS_SHORT_CALL_TABLE: 0024
0012       2     BCS_BUILTINS: 0024
0014       2     BCS_STRING_TABLE: 0028
0016       2     BCS_ROM: 002c
0018       2     BCS_GLOBALS: 08dc
001a       2     BCS_HEAP: 0900
001c    4  - # Import Table
001c       2     [0]: 2
001e       2     [1]: 3
0020    4  - # Export Table
0020       4     [0]: &0218
0024    4  - # Builtins
0024       2     [BIN_UNIQUE_STRINGS]: null
0026       2     [BIN_ARRAY_PROTO]: &08fe
0028    4  - # String Table
0028       2     [0]: &002e
002a       2     [1]: &0036
002c  8b0  - # ROM allocations
002c       2     Header [Size: 6, Type: TC_REF_UNIQUE_STRING]
002e       6     Value: 'isNaN'
0034       2     Header [Size: 5, Type: TC_REF_UNIQUE_STRING]
0036       5     Value: 'push'
003b       1     <unused>
003c       2     Header [Size: 8, Type: TC_REF_FLOAT64]
003e       8     Value: -1.1
0046       2     Header [Size: 4, Type: TC_REF_INT32]
0048       4     Value: -2147483648
004c       2     Header [Size: 8, Type: TC_REF_FLOAT64]
004e       8     Value: 2147483648
0056       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0058       8     Value: 1.1
0060       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0062       8     Value: 3.1
006a       2     Header [Size: 4, Type: TC_REF_INT32]
006c       4     Value: 10000
0070       2     Header [Size: 4, Type: TC_REF_INT32]
0072       4     Value: 18000
0076       2     Header [Size: 4, Type: TC_REF_INT32]
0078       4     Value: 80000
007c       2     Header [Size: 4, Type: TC_REF_INT32]
007e       4     Value: 70000
0082       2     Header [Size: 4, Type: TC_REF_INT32]
0084       4     Value: 150000
0088       2     Header [Size: 4, Type: TC_REF_INT32]
008a       4     Value: 14500
008e       2     Header [Size: 4, Type: TC_REF_INT32]
0090       4     Value: 2000000000
0094       2     Header [Size: 4, Type: TC_REF_INT32]
0096       4     Value: -294967296
009a       2     Header [Size: 8, Type: TC_REF_FLOAT64]
009c       8     Value: -1.5
00a4       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00a6       8     Value: -0.5
00ae       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00b0       8     Value: 0.5
00b8       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00ba       8     Value: -5000000000
00c2       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00c4       8     Value: 4999999000
00cc       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00ce       8     Value: 4000000000
00d6       2     Header [Size: 4, Type: TC_REF_INT32]
00d8       4     Value: -14500
00dc       2     Header [Size: 4, Type: TC_REF_INT32]
00de       4     Value: -2000000000
00e2       2     Header [Size: 4, Type: TC_REF_INT32]
00e4       4     Value: 294967296
00e8       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00ea       8     Value: 1.5
00f2       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00f4       8     Value: 5000000000
00fc       2     Header [Size: 8, Type: TC_REF_FLOAT64]
00fe       8     Value: -4000000000
0106       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0108       8     Value: 5.5
0110       2     Header [Size: 4, Type: TC_REF_INT32]
0112       4     Value: 25000000
0116       2     Header [Size: 4, Type: TC_REF_INT32]
0118       4     Value: 17000
011c       2     Header [Size: 4, Type: TC_REF_INT32]
011e       4     Value: 34000
0122       2     Header [Size: 4, Type: TC_REF_INT32]
0124       4     Value: 5000000
0128       2     Header [Size: 4, Type: TC_REF_INT32]
012a       4     Value: -1004630016
012e       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0130       8     Value: 25000000000000
0138       2     Header [Size: 8, Type: TC_REF_FLOAT64]
013a       8     Value: 3.5
0142       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0144       8     Value: 8.5
014c       2     Header [Size: 8, Type: TC_REF_FLOAT64]
014e       8     Value: 2.5
0156       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0158       8     Value: 3.4
0160       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0162       8     Value: -8.5
016a       2     Header [Size: 8, Type: TC_REF_FLOAT64]
016c       8     Value: -2.5
0174       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0176       8     Value: 2.1
017e       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0180       8     Value: 2.25
0188       2     Header [Size: 8, Type: TC_REF_FLOAT64]
018a       8     Value: 0.25
0192       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0194       8     Value: 5.25
019c       2     Header [Size: 8, Type: TC_REF_FLOAT64]
019e       8     Value: 1.25
01a6       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01a8       8     Value: 550.25
01b0       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01b2       8     Value: 50.25
01ba       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01bc       8     Value: -7.25
01c4       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01c6       8     Value: -3.25
01ce       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01d0       8     Value: 7.25
01d8       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01da       8     Value: 3.25
01e2       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01e4       8     Value: 5.1
01ec       2     Header [Size: 8, Type: TC_REF_FLOAT64]
01ee       8     Value: Infinity
01f6       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
01f8       2     Value: Import Table [0] (&001c)
01fa       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
01fc       2     Value: Import Table [1] (&001e)
01fe       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0200    6  -     # Function Number_isNaN
0200       1         maxStackDepth: 3
0201    5  -         # Block entry
0201       1             LoadArg(index 1)
0202       1             LoadVar(index 0)
0203       1             LoadVar(index 0)
0204       1             BinOp(op '!==')
0205       1             Return()
0206       2     Header [Size: 14, Type: TC_REF_FUNCTION]
0208    e  -     # Function Array_push
0208       1         maxStackDepth: 5
0209    d  -         # Block entry
0209       1             LoadArg(index 1)
020a       1             LoadVar(index 0)
020b       1             LoadArg(index 0)
020c       1             LoadArg(index 0)
020d       3             Literal('length')
0210       1             ObjectGet()
0211       1             LoadVar(index 1)
0212       1             ObjectSet()
0213       1             Pop(count 1)
0214       1             Literal(lit undefined)
0215       1             Return()
0216       2     Header [Size: 59, Type: TC_REF_FUNCTION]
0218   3b  -     # Function run
0218       1         maxStackDepth: 2
0219   3a  -         # Block entry
0219       1             LoadGlobal [6]
021a       1             Literal(lit undefined)
021b       2             Call(count 1)
021d       1             Pop(count 1)
021e       1             LoadGlobal [7]
021f       1             Literal(lit undefined)
0220       2             Call(count 1)
0222       1             Pop(count 1)
0223       1             LoadGlobal [8]
0224       1             Literal(lit undefined)
0225       2             Call(count 1)
0227       1             Pop(count 1)
0228       1             LoadGlobal [9]
0229       1             Literal(lit undefined)
022a       2             Call(count 1)
022c       1             Pop(count 1)
022d       1             LoadGlobal [10]
022e       1             Literal(lit undefined)
022f       2             Call(count 1)
0231       1             Pop(count 1)
0232       1             LoadGlobal [11]
0233       1             Literal(lit undefined)
0234       2             Call(count 1)
0236       1             Pop(count 1)
0237       1             LoadGlobal [12]
0238       1             Literal(lit undefined)
0239       2             Call(count 1)
023b       1             Pop(count 1)
023c       1             LoadGlobal [13]
023d       1             Literal(lit undefined)
023e       2             Call(count 1)
0240       1             Pop(count 1)
0241       1             LoadGlobal [14]
0242       1             Literal(lit undefined)
0243       2             Call(count 1)
0245       1             Pop(count 1)
0246       1             LoadGlobal [15]
0247       1             Literal(lit undefined)
0248       2             Call(count 1)
024a       1             Pop(count 1)
024b       2             LoadGlobal [16]
024d       1             Literal(lit undefined)
024e       2             Call(count 1)
0250       1             Pop(count 1)
0251       1             Literal(lit undefined)
0252       1             Return()
0253       1     <unused>
0254       2     Header [Size: 46, Type: TC_REF_FUNCTION]
0256   2e  -     # Function testNegate
0256       1         maxStackDepth: 5
0257   20  -         # Block entry
0257       1             LoadGlobal [4]
0258       1             Literal(lit undefined)
0259       1             Literal(lit -1)
025a       1             Literal(lit 2)
025b       3             Literal(3)
025e       1             BinOp(op '-')
025f       2             Call(count 3)
0261       1             Pop(count 1)
0262       1             LoadGlobal [4]
0263       1             Literal(lit undefined)
0264       1             LoadGlobal [0]
0265       1             UnOp(op '-')
0266       3             Literal(&003e)
0269       1             Literal(lit 0)
026a       1             BinOp(op '/')
026b       2             Call(count 3)
026d       1             Pop(count 1)
026e       1             LoadGlobal [4]
026f       1             Literal(lit undefined)
0270       3             Literal(&0048)
0273       1             UnOp(op '-')
0274       1             LoadGlobal [5]
0275       2             Branch &027f
0277    3  -         # Block block2
0277       3             Literal(&0048)
027a       0             <implicit fallthrough>
027a    5  -         # Block block3
027a       2             Call(count 3)
027c       1             Pop(count 1)
027d       1             Literal(lit undefined)
027e       1             Return()
027f    5  -         # Block block1
027f       3             Literal(&004e)
0282       2             Jump &027a
0284       2     Header [Size: 27, Type: TC_REF_FUNCTION]
0286   1b  -     # Function testUnaryPlus
0286       1         maxStackDepth: 4
0287   1a  -         # Block entry
0287       1             LoadGlobal [4]
0288       1             Literal(lit undefined)
0289       1             Literal(lit 1)
028a       1             Literal(lit 1)
028b       1             BinOp(op '+')
028c       1             UnOp(op '+')
028d       1             Literal(lit 2)
028e       2             Call(count 3)
0290       1             Pop(count 1)
0291       1             LoadGlobal [4]
0292       1             Literal(lit undefined)
0293       3             Literal(&0058)
0296       1             Literal(lit 2)
0297       1             BinOp(op '+')
0298       1             UnOp(op '+')
0299       3             Literal(&0062)
029c       2             Call(count 3)
029e       1             Pop(count 1)
029f       1             Literal(lit undefined)
02a0       1             Return()
02a1       1     <unused>
02a2       2     Header [Size: 187, Type: TC_REF_FUNCTION]
02a4   bb  -     # Function testAddition
02a4       1         maxStackDepth: 4
02a5   82  -         # Block entry
02a5       1             LoadGlobal [4]
02a6       1             Literal(lit undefined)
02a7       3             Literal(3)
02aa       1             Literal(lit 2)
02ab       1             BinOp(op '+')
02ac       3             Literal(5)
02af       2             Call(count 3)
02b1       1             Pop(count 1)
02b2       1             LoadGlobal [4]
02b3       1             Literal(lit undefined)
02b4       3             Literal(3000)
02b7       3             Literal(2000)
02ba       1             BinOp(op '+')
02bb       3             Literal(5000)
02be       2             Call(count 3)
02c0       1             Pop(count 1)
02c1       1             LoadGlobal [4]
02c2       1             Literal(lit undefined)
02c3       3             Literal(3000)
02c6       3             Literal(3500)
02c9       1             BinOp(op '+')
02ca       3             Literal(6500)
02cd       2             Call(count 3)
02cf       1             Pop(count 1)
02d0       1             LoadGlobal [4]
02d1       1             Literal(lit undefined)
02d2       3             Literal(6000)
02d5       3             Literal(500)
02d8       1             BinOp(op '+')
02d9       3             Literal(6500)
02dc       2             Call(count 3)
02de       1             Pop(count 1)
02df       1             LoadGlobal [4]
02e0       1             Literal(lit undefined)
02e1       3             Literal(500)
02e4       3             Literal(6500)
02e7       1             BinOp(op '+')
02e8       3             Literal(7000)
02eb       2             Call(count 3)
02ed       1             Pop(count 1)
02ee       1             LoadGlobal [4]
02ef       1             Literal(lit undefined)
02f0       3             Literal(&006c)
02f3       3             Literal(8000)
02f6       1             BinOp(op '+')
02f7       3             Literal(&0072)
02fa       2             Call(count 3)
02fc       1             Pop(count 1)
02fd       1             LoadGlobal [4]
02fe       1             Literal(lit undefined)
02ff       3             Literal(&0078)
0302       3             Literal(&007e)
0305       1             BinOp(op '+')
0306       3             Literal(&0084)
0309       2             Call(count 3)
030b       1             Pop(count 1)
030c       1             LoadGlobal [4]
030d       1             Literal(lit undefined)
030e       3             Literal(7500)
0311       3             Literal(7000)
0314       1             BinOp(op '+')
0315       3             Literal(&008a)
0318       2             Call(count 3)
031a       1             Pop(count 1)
031b       1             LoadGlobal [4]
031c       1             Literal(lit undefined)
031d       3             Literal(&0090)
0320       3             Literal(&0090)
0323       1             BinOp(op '+')
0324       1             LoadGlobal [5]
0325       2             Branch &035a
0327    3  -         # Block block5
0327       3             Literal(&0096)
032a       0             <implicit fallthrough>
032a   30  -         # Block block6
032a       2             Call(count 3)
032c       1             Pop(count 1)
032d       1             LoadGlobal [4]
032e       1             Literal(lit undefined)
032f       3             Literal(&009c)
0332       1             Literal(lit 1)
0333       1             BinOp(op '+')
0334       3             Literal(&00a6)
0337       2             Call(count 3)
0339       1             Pop(count 1)
033a       1             LoadGlobal [4]
033b       1             Literal(lit undefined)
033c       3             Literal(-2)
033f       3             Literal(&00b0)
0342       1             BinOp(op '+')
0343       3             Literal(&009c)
0346       2             Call(count 3)
0348       1             Pop(count 1)
0349       1             LoadGlobal [4]
034a       1             Literal(lit undefined)
034b       3             Literal(&00ba)
034e       3             Literal(&00c4)
0351       1             BinOp(op '+')
0352       3             Literal(-1000)
0355       2             Call(count 3)
0357       1             Pop(count 1)
0358       1             Literal(lit undefined)
0359       1             Return()
035a    5  -         # Block block4
035a       3             Literal(&00ce)
035d       2             Jump &032a
035f       1     <unused>
0360       2     Header [Size: 138, Type: TC_REF_FUNCTION]
0362   8a  -     # Function testSubtraction
0362       1         maxStackDepth: 4
0363   53  -         # Block entry
0363       1             LoadGlobal [4]
0364       1             Literal(lit undefined)
0365       3             Literal(3)
0368       1             Literal(lit 2)
0369       1             BinOp(op '-')
036a       1             Literal(lit 1)
036b       2             Call(count 3)
036d       1             Pop(count 1)
036e       1             LoadGlobal [4]
036f       1             Literal(lit undefined)
0370       3             Literal(3000)
0373       3             Literal(2000)
0376       1             BinOp(op '-')
0377       3             Literal(1000)
037a       2             Call(count 3)
037c       1             Pop(count 1)
037d       1             LoadGlobal [4]
037e       1             Literal(lit undefined)
037f       3             Literal(&006c)
0382       3             Literal(8000)
0385       1             BinOp(op '-')
0386       3             Literal(2000)
0389       2             Call(count 3)
038b       1             Pop(count 1)
038c       1             LoadGlobal [4]
038d       1             Literal(lit undefined)
038e       3             Literal(&0078)
0391       3             Literal(&007e)
0394       1             BinOp(op '-')
0395       3             Literal(&006c)
0398       2             Call(count 3)
039a       1             Pop(count 1)
039b       1             LoadGlobal [4]
039c       1             Literal(lit undefined)
039d       3             Literal(-7500)
03a0       3             Literal(7000)
03a3       1             BinOp(op '-')
03a4       3             Literal(&00d8)
03a7       2             Call(count 3)
03a9       1             Pop(count 1)
03aa       1             LoadGlobal [4]
03ab       1             Literal(lit undefined)
03ac       3             Literal(&00de)
03af       3             Literal(&0090)
03b2       1             BinOp(op '-')
03b3       1             LoadGlobal [5]
03b4       2             Branch &03e7
03b6    3  -         # Block block8
03b6       3             Literal(&00e4)
03b9       0             <implicit fallthrough>
03b9   2e  -         # Block block9
03b9       2             Call(count 3)
03bb       1             Pop(count 1)
03bc       1             LoadGlobal [4]
03bd       1             Literal(lit undefined)
03be       3             Literal(&00ea)
03c1       1             Literal(lit 1)
03c2       1             BinOp(op '-')
03c3       3             Literal(&00b0)
03c6       2             Call(count 3)
03c8       1             Pop(count 1)
03c9       1             LoadGlobal [4]
03ca       1             Literal(lit undefined)
03cb       1             Literal(lit 2)
03cc       3             Literal(&00b0)
03cf       1             BinOp(op '-')
03d0       3             Literal(&00ea)
03d3       2             Call(count 3)
03d5       1             Pop(count 1)
03d6       1             LoadGlobal [4]
03d7       1             Literal(lit undefined)
03d8       3             Literal(&00f4)
03db       3             Literal(&00c4)
03de       1             BinOp(op '-')
03df       3             Literal(1000)
03e2       2             Call(count 3)
03e4       1             Pop(count 1)
03e5       1             Literal(lit undefined)
03e6       1             Return()
03e7    5  -         # Block block7
03e7       3             Literal(&00fe)
03ea       2             Jump &03b9
03ec       2     Header [Size: 127, Type: TC_REF_FUNCTION]
03ee   7f  -     # Function testMultiplication
03ee       1         maxStackDepth: 4
03ef   64  -         # Block entry
03ef       1             LoadGlobal [4]
03f0       1             Literal(lit undefined)
03f1       3             Literal(5)
03f4       3             Literal(6)
03f7       1             BinOp(op '*')
03f8       3             Literal(30)
03fb       2             Call(count 3)
03fd       1             Pop(count 1)
03fe       1             LoadGlobal [4]
03ff       1             Literal(lit undefined)
0400       3             Literal(&0108)
0403       3             Literal(6)
0406       1             BinOp(op '*')
0407       3             Literal(33)
040a       2             Call(count 3)
040c       1             Pop(count 1)
040d       1             LoadGlobal [4]
040e       1             Literal(lit undefined)
040f       3             Literal(-5)
0412       3             Literal(-6)
0415       1             BinOp(op '*')
0416       3             Literal(30)
0419       2             Call(count 3)
041b       1             Pop(count 1)
041c       1             LoadGlobal [4]
041d       1             Literal(lit undefined)
041e       3             Literal(5)
0421       3             Literal(-6)
0424       1             BinOp(op '*')
0425       3             Literal(-30)
0428       2             Call(count 3)
042a       1             Pop(count 1)
042b       1             LoadGlobal [4]
042c       1             Literal(lit undefined)
042d       3             Literal(5000)
0430       3             Literal(5000)
0433       1             BinOp(op '*')
0434       3             Literal(&0112)
0437       2             Call(count 3)
0439       1             Pop(count 1)
043a       1             LoadGlobal [4]
043b       1             Literal(lit undefined)
043c       3             Literal(&0118)
043f       1             Literal(lit 2)
0440       1             BinOp(op '*')
0441       3             Literal(&011e)
0444       2             Call(count 3)
0446       1             Pop(count 1)
0447       1             LoadGlobal [4]
0448       1             Literal(lit undefined)
0449       3             Literal(&0124)
044c       3             Literal(&0124)
044f       1             BinOp(op '*')
0450       1             LoadGlobal [5]
0451       2             Branch &0468
0453    3  -         # Block block11
0453       3             Literal(&012a)
0456       0             <implicit fallthrough>
0456   12  -         # Block block12
0456       2             Call(count 3)
0458       1             Pop(count 1)
0459       1             LoadGlobal [4]
045a       1             Literal(lit undefined)
045b       3             Literal(&0130)
045e       1             Literal(lit 1)
045f       1             BinOp(op '*')
0460       3             Literal(&0130)
0463       2             Call(count 3)
0465       1             Pop(count 1)
0466       1             Literal(lit undefined)
0467       1             Return()
0468    5  -         # Block block10
0468       3             Literal(&0130)
046b       2             Jump &0456
046d       1     <unused>
046e       2     Header [Size: 328, Type: TC_REF_FUNCTION]
0470  148  -     # Function testDivision
0470       1         maxStackDepth: 7
0471   50  -         # Block entry
0471       1             LoadGlobal [4]
0472       1             Literal(lit undefined)
0473       3             Literal(6)
0476       3             Literal(3)
0479       1             BinOp(op '/')
047a       1             Literal(lit 2)
047b       2             Call(count 3)
047d       1             Pop(count 1)
047e       1             LoadGlobal [4]
047f       1             Literal(lit undefined)
0480       3             Literal(7)
0483       1             Literal(lit 2)
0484       1             BinOp(op '/')
0485       3             Literal(&013a)
0488       2             Call(count 3)
048a       1             Pop(count 1)
048b       1             LoadGlobal [4]
048c       1             Literal(lit undefined)
048d       3             Literal(&0144)
0490       3             Literal(&014e)
0493       1             BinOp(op '/')
0494       3             Literal(&0158)
0497       2             Call(count 3)
0499       1             Pop(count 1)
049a       1             LoadGlobal [4]
049b       1             Literal(lit undefined)
049c       3             Literal(8)
049f       1             Literal(lit 0)
04a0       1             BinOp(op '/')
04a1       1             LoadGlobal [0]
04a2       2             Call(count 3)
04a4       1             Pop(count 1)
04a5       1             LoadGlobal [4]
04a6       1             Literal(lit undefined)
04a7       3             Literal(8)
04aa       3             Literal(-0)
04ad       1             BinOp(op '/')
04ae       1             LoadGlobal [0]
04af       1             UnOp(op '-')
04b0       2             Call(count 3)
04b2       1             Pop(count 1)
04b3       1             LoadGlobal [4]
04b4       1             Literal(lit undefined)
04b5       3             Literal(8)
04b8       1             Literal(lit 1)
04b9       1             Literal(lit 1)
04ba       1             BinOp(op '-')
04bb       1             UnOp(op '-')
04bc       1             BinOp(op '/')
04bd       1             LoadGlobal [5]
04be       3             Branch &05b3
04c1    1  -         # Block block14
04c1       1             LoadGlobal [0]
04c2       0             <implicit fallthrough>
04c2   f1  -         # Block block15
04c2       2             Call(count 3)
04c4       1             Pop(count 1)
04c5       1             LoadGlobal [4]
04c6       1             Literal(lit undefined)
04c7       3             Literal(-8)
04ca       1             Literal(lit 0)
04cb       1             BinOp(op '/')
04cc       1             LoadGlobal [0]
04cd       1             UnOp(op '-')
04ce       2             Call(count 3)
04d0       1             Pop(count 1)
04d1       1             LoadGlobal [4]
04d2       1             Literal(lit undefined)
04d3       3             Literal(-8)
04d6       3             Literal(-0)
04d9       1             BinOp(op '/')
04da       1             LoadGlobal [0]
04db       2             Call(count 3)
04dd       1             Pop(count 1)
04de       1             LoadGlobal [3]
04df       1             Literal(lit undefined)
04e0       1             LoadGlobal [2]
04e1       1             LoadVar(index 2)
04e2       3             Literal(&002e)
04e5       1             ObjectGet()
04e6       1             LoadVar(index 2)
04e7       1             LoadGlobal [0]
04e8       1             LoadGlobal [0]
04e9       1             BinOp(op '/')
04ea       2             Call(count 2)
04ec       1             StoreVar(index 2)
04ed       2             Call(count 2)
04ef       1             Pop(count 1)
04f0       1             LoadGlobal [4]
04f1       1             Literal(lit undefined)
04f2       3             Literal(6)
04f5       3             Literal(3)
04f8       1             BinOp(op 'DIVIDE_AND_TRUNC')
04f9       1             Literal(lit 2)
04fa       2             Call(count 3)
04fc       1             Pop(count 1)
04fd       1             LoadGlobal [4]
04fe       1             Literal(lit undefined)
04ff       3             Literal(7)
0502       1             Literal(lit 2)
0503       1             BinOp(op 'DIVIDE_AND_TRUNC')
0504       3             Literal(3)
0507       2             Call(count 3)
0509       1             Pop(count 1)
050a       1             LoadGlobal [4]
050b       1             Literal(lit undefined)
050c       3             Literal(&0144)
050f       3             Literal(&014e)
0512       1             BinOp(op 'DIVIDE_AND_TRUNC')
0513       3             Literal(3)
0516       2             Call(count 3)
0518       1             Pop(count 1)
0519       1             LoadGlobal [4]
051a       1             Literal(lit undefined)
051b       3             Literal(-6)
051e       3             Literal(-3)
0521       1             BinOp(op 'DIVIDE_AND_TRUNC')
0522       1             Literal(lit 2)
0523       2             Call(count 3)
0525       1             Pop(count 1)
0526       1             LoadGlobal [4]
0527       1             Literal(lit undefined)
0528       3             Literal(-7)
052b       3             Literal(-2)
052e       1             BinOp(op 'DIVIDE_AND_TRUNC')
052f       3             Literal(3)
0532       2             Call(count 3)
0534       1             Pop(count 1)
0535       1             LoadGlobal [4]
0536       1             Literal(lit undefined)
0537       3             Literal(&0162)
053a       3             Literal(&016c)
053d       1             BinOp(op 'DIVIDE_AND_TRUNC')
053e       3             Literal(3)
0541       2             Call(count 3)
0543       1             Pop(count 1)
0544       1             LoadGlobal [4]
0545       1             Literal(lit undefined)
0546       3             Literal(-6)
0549       3             Literal(3)
054c       1             BinOp(op 'DIVIDE_AND_TRUNC')
054d       3             Literal(-2)
0550       2             Call(count 3)
0552       1             Pop(count 1)
0553       1             LoadGlobal [4]
0554       1             Literal(lit undefined)
0555       3             Literal(-7)
0558       1             Literal(lit 2)
0559       1             BinOp(op 'DIVIDE_AND_TRUNC')
055a       3             Literal(-3)
055d       2             Call(count 3)
055f       1             Pop(count 1)
0560       1             LoadGlobal [4]
0561       1             Literal(lit undefined)
0562       3             Literal(&0162)
0565       3             Literal(&014e)
0568       1             BinOp(op 'DIVIDE_AND_TRUNC')
0569       3             Literal(-3)
056c       2             Call(count 3)
056e       1             Pop(count 1)
056f       1             LoadGlobal [4]
0570       1             Literal(lit undefined)
0571       3             Literal(8)
0574       1             Literal(lit 0)
0575       1             BinOp(op 'DIVIDE_AND_TRUNC')
0576       1             Literal(lit 0)
0577       2             Call(count 3)
0579       1             Pop(count 1)
057a       1             LoadGlobal [4]
057b       1             Literal(lit undefined)
057c       3             Literal(8)
057f       3             Literal(-0)
0582       1             BinOp(op 'DIVIDE_AND_TRUNC')
0583       1             Literal(lit 0)
0584       2             Call(count 3)
0586       1             Pop(count 1)
0587       1             LoadGlobal [4]
0588       1             Literal(lit undefined)
0589       3             Literal(-8)
058c       1             Literal(lit 0)
058d       1             BinOp(op 'DIVIDE_AND_TRUNC')
058e       1             Literal(lit 0)
058f       2             Call(count 3)
0591       1             Pop(count 1)
0592       1             LoadGlobal [4]
0593       1             Literal(lit undefined)
0594       3             Literal(-8)
0597       3             Literal(-0)
059a       1             BinOp(op 'DIVIDE_AND_TRUNC')
059b       1             Literal(lit 0)
059c       2             Call(count 3)
059e       1             Pop(count 1)
059f       1             LoadGlobal [4]
05a0       1             Literal(lit undefined)
05a1       1             LoadGlobal [1]
05a2       1             LoadGlobal [1]
05a3       1             BinOp(op 'DIVIDE_AND_TRUNC')
05a4       1             Literal(lit 0)
05a5       2             Call(count 3)
05a7       1             Pop(count 1)
05a8       1             LoadGlobal [4]
05a9       1             Literal(lit undefined)
05aa       1             LoadGlobal [0]
05ab       1             LoadGlobal [0]
05ac       1             BinOp(op 'DIVIDE_AND_TRUNC')
05ad       1             Literal(lit 0)
05ae       2             Call(count 3)
05b0       1             Pop(count 1)
05b1       1             Literal(lit undefined)
05b2       1             Return()
05b3    5  -         # Block block13
05b3       1             LoadGlobal [0]
05b4       1             UnOp(op '-')
05b5       3             Jump &04c2
05b8       2     Header [Size: 205, Type: TC_REF_FUNCTION]
05ba   cd  -     # Function testLessThan
05ba       1         maxStackDepth: 4
05bb   cc  -         # Block entry
05bb       1             LoadGlobal [4]
05bc       1             Literal(lit undefined)
05bd       1             Literal(lit 1)
05be       1             Literal(lit 2)
05bf       1             BinOp(op '<')
05c0       1             Literal(lit true)
05c1       2             Call(count 3)
05c3       1             Pop(count 1)
05c4       1             LoadGlobal [4]
05c5       1             Literal(lit undefined)
05c6       1             Literal(lit 2)
05c7       1             Literal(lit 1)
05c8       1             BinOp(op '<')
05c9       1             Literal(lit false)
05ca       2             Call(count 3)
05cc       1             Pop(count 1)
05cd       1             LoadGlobal [4]
05ce       1             Literal(lit undefined)
05cf       1             Literal(lit 2)
05d0       1             Literal(lit 2)
05d1       1             BinOp(op '<')
05d2       1             Literal(lit false)
05d3       2             Call(count 3)
05d5       1             Pop(count 1)
05d6       1             LoadGlobal [4]
05d7       1             Literal(lit undefined)
05d8       1             Literal(lit -1)
05d9       3             Literal(-2)
05dc       1             BinOp(op '<')
05dd       1             Literal(lit false)
05de       2             Call(count 3)
05e0       1             Pop(count 1)
05e1       1             LoadGlobal [4]
05e2       1             Literal(lit undefined)
05e3       3             Literal(-2)
05e6       1             Literal(lit -1)
05e7       1             BinOp(op '<')
05e8       1             Literal(lit true)
05e9       2             Call(count 3)
05eb       1             Pop(count 1)
05ec       1             LoadGlobal [4]
05ed       1             Literal(lit undefined)
05ee       3             Literal(-2)
05f1       3             Literal(-2)
05f4       1             BinOp(op '<')
05f5       1             Literal(lit false)
05f6       2             Call(count 3)
05f8       1             Pop(count 1)
05f9       1             LoadGlobal [4]
05fa       1             Literal(lit undefined)
05fb       3             Literal(&0058)
05fe       3             Literal(&0176)
0601       1             BinOp(op '<')
0602       1             Literal(lit true)
0603       2             Call(count 3)
0605       1             Pop(count 1)
0606       1             LoadGlobal [4]
0607       1             Literal(lit undefined)
0608       3             Literal(&0176)
060b       3             Literal(&0058)
060e       1             BinOp(op '<')
060f       1             Literal(lit false)
0610       2             Call(count 3)
0612       1             Pop(count 1)
0613       1             LoadGlobal [4]
0614       1             Literal(lit undefined)
0615       3             Literal(&0176)
0618       3             Literal(&0176)
061b       1             BinOp(op '<')
061c       1             Literal(lit false)
061d       2             Call(count 3)
061f       1             Pop(count 1)
0620       1             LoadGlobal [4]
0621       1             Literal(lit undefined)
0622       1             Literal(lit 1)
0623       1             Literal(lit 2)
0624       1             BinOp(op '<=')
0625       1             Literal(lit true)
0626       2             Call(count 3)
0628       1             Pop(count 1)
0629       1             LoadGlobal [4]
062a       1             Literal(lit undefined)
062b       1             Literal(lit 2)
062c       1             Literal(lit 1)
062d       1             BinOp(op '<=')
062e       1             Literal(lit false)
062f       2             Call(count 3)
0631       1             Pop(count 1)
0632       1             LoadGlobal [4]
0633       1             Literal(lit undefined)
0634       1             Literal(lit 2)
0635       1             Literal(lit 2)
0636       1             BinOp(op '<=')
0637       1             Literal(lit true)
0638       2             Call(count 3)
063a       1             Pop(count 1)
063b       1             LoadGlobal [4]
063c       1             Literal(lit undefined)
063d       1             Literal(lit -1)
063e       3             Literal(-2)
0641       1             BinOp(op '<=')
0642       1             Literal(lit false)
0643       2             Call(count 3)
0645       1             Pop(count 1)
0646       1             LoadGlobal [4]
0647       1             Literal(lit undefined)
0648       3             Literal(-2)
064b       1             Literal(lit -1)
064c       1             BinOp(op '<=')
064d       1             Literal(lit true)
064e       2             Call(count 3)
0650       1             Pop(count 1)
0651       1             LoadGlobal [4]
0652       1             Literal(lit undefined)
0653       3             Literal(-2)
0656       3             Literal(-2)
0659       1             BinOp(op '<=')
065a       1             Literal(lit true)
065b       2             Call(count 3)
065d       1             Pop(count 1)
065e       1             LoadGlobal [4]
065f       1             Literal(lit undefined)
0660       3             Literal(&0058)
0663       3             Literal(&0176)
0666       1             BinOp(op '<=')
0667       1             Literal(lit true)
0668       2             Call(count 3)
066a       1             Pop(count 1)
066b       1             LoadGlobal [4]
066c       1             Literal(lit undefined)
066d       3             Literal(&0176)
0670       3             Literal(&0058)
0673       1             BinOp(op '<=')
0674       1             Literal(lit false)
0675       2             Call(count 3)
0677       1             Pop(count 1)
0678       1             LoadGlobal [4]
0679       1             Literal(lit undefined)
067a       3             Literal(&0176)
067d       3             Literal(&0176)
0680       1             BinOp(op '<=')
0681       1             Literal(lit true)
0682       2             Call(count 3)
0684       1             Pop(count 1)
0685       1             Literal(lit undefined)
0686       1             Return()
0687       1     <unused>
0688       2     Header [Size: 205, Type: TC_REF_FUNCTION]
068a   cd  -     # Function testGreaterThan
068a       1         maxStackDepth: 4
068b   cc  -         # Block entry
068b       1             LoadGlobal [4]
068c       1             Literal(lit undefined)
068d       1             Literal(lit 1)
068e       1             Literal(lit 2)
068f       1             BinOp(op '>')
0690       1             Literal(lit false)
0691       2             Call(count 3)
0693       1             Pop(count 1)
0694       1             LoadGlobal [4]
0695       1             Literal(lit undefined)
0696       1             Literal(lit 2)
0697       1             Literal(lit 1)
0698       1             BinOp(op '>')
0699       1             Literal(lit true)
069a       2             Call(count 3)
069c       1             Pop(count 1)
069d       1             LoadGlobal [4]
069e       1             Literal(lit undefined)
069f       1             Literal(lit 2)
06a0       1             Literal(lit 2)
06a1       1             BinOp(op '>')
06a2       1             Literal(lit false)
06a3       2             Call(count 3)
06a5       1             Pop(count 1)
06a6       1             LoadGlobal [4]
06a7       1             Literal(lit undefined)
06a8       1             Literal(lit -1)
06a9       3             Literal(-2)
06ac       1             BinOp(op '>')
06ad       1             Literal(lit true)
06ae       2             Call(count 3)
06b0       1             Pop(count 1)
06b1       1             LoadGlobal [4]
06b2       1             Literal(lit undefined)
06b3       3             Literal(-2)
06b6       1             Literal(lit -1)
06b7       1             BinOp(op '>')
06b8       1             Literal(lit false)
06b9       2             Call(count 3)
06bb       1             Pop(count 1)
06bc       1             LoadGlobal [4]
06bd       1             Literal(lit undefined)
06be       3             Literal(-2)
06c1       3             Literal(-2)
06c4       1             BinOp(op '>')
06c5       1             Literal(lit false)
06c6       2             Call(count 3)
06c8       1             Pop(count 1)
06c9       1             LoadGlobal [4]
06ca       1             Literal(lit undefined)
06cb       3             Literal(&0058)
06ce       3             Literal(&0176)
06d1       1             BinOp(op '>')
06d2       1             Literal(lit false)
06d3       2             Call(count 3)
06d5       1             Pop(count 1)
06d6       1             LoadGlobal [4]
06d7       1             Literal(lit undefined)
06d8       3             Literal(&0176)
06db       3             Literal(&0058)
06de       1             BinOp(op '>')
06df       1             Literal(lit true)
06e0       2             Call(count 3)
06e2       1             Pop(count 1)
06e3       1             LoadGlobal [4]
06e4       1             Literal(lit undefined)
06e5       3             Literal(&0176)
06e8       3             Literal(&0176)
06eb       1             BinOp(op '>')
06ec       1             Literal(lit false)
06ed       2             Call(count 3)
06ef       1             Pop(count 1)
06f0       1             LoadGlobal [4]
06f1       1             Literal(lit undefined)
06f2       1             Literal(lit 1)
06f3       1             Literal(lit 2)
06f4       1             BinOp(op '>=')
06f5       1             Literal(lit false)
06f6       2             Call(count 3)
06f8       1             Pop(count 1)
06f9       1             LoadGlobal [4]
06fa       1             Literal(lit undefined)
06fb       1             Literal(lit 2)
06fc       1             Literal(lit 1)
06fd       1             BinOp(op '>=')
06fe       1             Literal(lit true)
06ff       2             Call(count 3)
0701       1             Pop(count 1)
0702       1             LoadGlobal [4]
0703       1             Literal(lit undefined)
0704       1             Literal(lit 2)
0705       1             Literal(lit 2)
0706       1             BinOp(op '>=')
0707       1             Literal(lit true)
0708       2             Call(count 3)
070a       1             Pop(count 1)
070b       1             LoadGlobal [4]
070c       1             Literal(lit undefined)
070d       1             Literal(lit -1)
070e       3             Literal(-2)
0711       1             BinOp(op '>=')
0712       1             Literal(lit true)
0713       2             Call(count 3)
0715       1             Pop(count 1)
0716       1             LoadGlobal [4]
0717       1             Literal(lit undefined)
0718       3             Literal(-2)
071b       1             Literal(lit -1)
071c       1             BinOp(op '>=')
071d       1             Literal(lit false)
071e       2             Call(count 3)
0720       1             Pop(count 1)
0721       1             LoadGlobal [4]
0722       1             Literal(lit undefined)
0723       3             Literal(-2)
0726       3             Literal(-2)
0729       1             BinOp(op '>=')
072a       1             Literal(lit true)
072b       2             Call(count 3)
072d       1             Pop(count 1)
072e       1             LoadGlobal [4]
072f       1             Literal(lit undefined)
0730       3             Literal(&0058)
0733       3             Literal(&0176)
0736       1             BinOp(op '>=')
0737       1             Literal(lit false)
0738       2             Call(count 3)
073a       1             Pop(count 1)
073b       1             LoadGlobal [4]
073c       1             Literal(lit undefined)
073d       3             Literal(&0176)
0740       3             Literal(&0058)
0743       1             BinOp(op '>=')
0744       1             Literal(lit true)
0745       2             Call(count 3)
0747       1             Pop(count 1)
0748       1             LoadGlobal [4]
0749       1             Literal(lit undefined)
074a       3             Literal(&0176)
074d       3             Literal(&0176)
0750       1             BinOp(op '>=')
0751       1             Literal(lit true)
0752       2             Call(count 3)
0754       1             Pop(count 1)
0755       1             Literal(lit undefined)
0756       1             Return()
0757       1     <unused>
0758       2     Header [Size: 207, Type: TC_REF_FUNCTION]
075a   cf  -     # Function testRemainder
075a       1         maxStackDepth: 7
075b   ce  -         # Block entry
075b       1             LoadGlobal [4]
075c       1             Literal(lit undefined)
075d       1             Literal(lit 2)
075e       1             Literal(lit 1)
075f       1             BinOp(op '%')
0760       1             Literal(lit 0)
0761       2             Call(count 3)
0763       1             Pop(count 1)
0764       1             LoadGlobal [4]
0765       1             Literal(lit undefined)
0766       3             Literal(5)
0769       1             Literal(lit 2)
076a       1             BinOp(op '%')
076b       1             Literal(lit 1)
076c       2             Call(count 3)
076e       1             Pop(count 1)
076f       1             LoadGlobal [4]
0770       1             Literal(lit undefined)
0771       3             Literal(550)
0774       3             Literal(100)
0777       1             BinOp(op '%')
0778       3             Literal(50)
077b       2             Call(count 3)
077d       1             Pop(count 1)
077e       1             LoadGlobal [4]
077f       1             Literal(lit undefined)
0780       3             Literal(-8)
0783       3             Literal(3)
0786       1             BinOp(op '%')
0787       3             Literal(-2)
078a       2             Call(count 3)
078c       1             Pop(count 1)
078d       1             LoadGlobal [4]
078e       1             Literal(lit undefined)
078f       3             Literal(8)
0792       3             Literal(-3)
0795       1             BinOp(op '%')
0796       1             Literal(lit 2)
0797       2             Call(count 3)
0799       1             Pop(count 1)
079a       1             LoadGlobal [4]
079b       1             Literal(lit undefined)
079c       3             Literal(-8)
079f       3             Literal(-3)
07a2       1             BinOp(op '%')
07a3       3             Literal(-2)
07a6       2             Call(count 3)
07a8       1             Pop(count 1)
07a9       1             LoadGlobal [4]
07aa       1             Literal(lit undefined)
07ab       3             Literal(&0180)
07ae       1             Literal(lit 1)
07af       1             BinOp(op '%')
07b0       3             Literal(&018a)
07b3       2             Call(count 3)
07b5       1             Pop(count 1)
07b6       1             LoadGlobal [4]
07b7       1             Literal(lit undefined)
07b8       3             Literal(&0194)
07bb       1             Literal(lit 2)
07bc       1             BinOp(op '%')
07bd       3             Literal(&019e)
07c0       2             Call(count 3)
07c2       1             Pop(count 1)
07c3       1             LoadGlobal [4]
07c4       1             Literal(lit undefined)
07c5       3             Literal(&01a8)
07c8       3             Literal(100)
07cb       1             BinOp(op '%')
07cc       3             Literal(&01b2)
07cf       2             Call(count 3)
07d1       1             Pop(count 1)
07d2       1             LoadGlobal [4]
07d3       1             Literal(lit undefined)
07d4       3             Literal(&01bc)
07d7       3             Literal(4)
07da       1             BinOp(op '%')
07db       3             Literal(&01c6)
07de       2             Call(count 3)
07e0       1             Pop(count 1)
07e1       1             LoadGlobal [4]
07e2       1             Literal(lit undefined)
07e3       3             Literal(&01d0)
07e6       3             Literal(-4)
07e9       1             BinOp(op '%')
07ea       3             Literal(&01da)
07ed       2             Call(count 3)
07ef       1             Pop(count 1)
07f0       1             LoadGlobal [4]
07f1       1             Literal(lit undefined)
07f2       3             Literal(&01bc)
07f5       3             Literal(-4)
07f8       1             BinOp(op '%')
07f9       3             Literal(&01c6)
07fc       2             Call(count 3)
07fe       1             Pop(count 1)
07ff       1             LoadGlobal [3]
0800       1             Literal(lit undefined)
0801       1             LoadGlobal [2]
0802       1             LoadVar(index 2)
0803       3             Literal(&002e)
0806       1             ObjectGet()
0807       1             LoadVar(index 2)
0808       3             Literal(5)
080b       1             Literal(lit 0)
080c       1             BinOp(op '%')
080d       2             Call(count 2)
080f       1             StoreVar(index 2)
0810       2             Call(count 2)
0812       1             Pop(count 1)
0813       1             LoadGlobal [3]
0814       1             Literal(lit undefined)
0815       1             LoadGlobal [2]
0816       1             LoadVar(index 2)
0817       3             Literal(&002e)
081a       1             ObjectGet()
081b       1             LoadVar(index 2)
081c       3             Literal(&01e4)
081f       1             Literal(lit 0)
0820       1             BinOp(op '%')
0821       2             Call(count 2)
0823       1             StoreVar(index 2)
0824       2             Call(count 2)
0826       1             Pop(count 1)
0827       1             Literal(lit undefined)
0828       1             Return()
0829       1     <unused>
082a       2     Header [Size: 56, Type: TC_REF_FUNCTION]
082c   38  -     # Function testPower
082c       1         maxStackDepth: 7
082d   37  -         # Block entry
082d       1             LoadGlobal [4]
082e       1             Literal(lit undefined)
082f       1             Literal(lit 2)
0830       3             Literal(3)
0833       1             BinOp(op '**')
0834       3             Literal(8)
0837       2             Call(count 3)
0839       1             Pop(count 1)
083a       1             LoadGlobal [4]
083b       1             Literal(lit undefined)
083c       1             Literal(lit 2)
083d       1             Literal(lit 0)
083e       1             BinOp(op '**')
083f       1             Literal(lit 1)
0840       2             Call(count 3)
0842       1             Pop(count 1)
0843       1             LoadGlobal [4]
0844       1             Literal(lit undefined)
0845       3             Literal(&014e)
0848       1             Literal(lit 1)
0849       1             BinOp(op '**')
084a       3             Literal(&014e)
084d       2             Call(count 3)
084f       1             Pop(count 1)
0850       1             LoadGlobal [3]
0851       1             Literal(lit undefined)
0852       1             LoadGlobal [2]
0853       1             LoadVar(index 2)
0854       3             Literal(&002e)
0857       1             ObjectGet()
0858       1             LoadVar(index 2)
0859       1             Literal(lit 1)
085a       1             LoadGlobal [0]
085b       1             BinOp(op '**')
085c       2             Call(count 2)
085e       1             StoreVar(index 2)
085f       2             Call(count 2)
0861       1             Pop(count 1)
0862       1             Literal(lit undefined)
0863       1             Return()
0864       2     Header [Size: 118, Type: TC_REF_FUNCTION]
0866   76  -     # Function testIncrDecr
0866       1         maxStackDepth: 6
0867   75  -         # Block entry
0867       1             Literal(lit 1)
0868       1             LoadGlobal [4]
0869       1             Literal(lit undefined)
086a       1             LoadVar(index 0)
086b       1             LoadVar(index 3)
086c       1             Literal(lit 1)
086d       1             BinOp(op '+')
086e       1             LoadVar(index 4)
086f       1             StoreVar(index 0)
0870       1             Pop(count 1)
0871       1             Literal(lit 1)
0872       2             Call(count 3)
0874       1             Pop(count 1)
0875       1             LoadGlobal [4]
0876       1             Literal(lit undefined)
0877       1             LoadVar(index 0)
0878       1             Literal(lit 2)
0879       2             Call(count 3)
087b       1             Pop(count 1)
087c       1             LoadGlobal [4]
087d       1             Literal(lit undefined)
087e       1             LoadVar(index 0)
087f       1             Literal(lit 1)
0880       1             BinOp(op '+')
0881       1             LoadVar(index 3)
0882       1             StoreVar(index 0)
0883       3             Literal(3)
0886       2             Call(count 3)
0888       1             Pop(count 1)
0889       1             LoadGlobal [4]
088a       1             Literal(lit undefined)
088b       1             LoadVar(index 0)
088c       3             Literal(3)
088f       2             Call(count 3)
0891       1             Pop(count 1)
0892       1             LoadGlobal [4]
0893       1             Literal(lit undefined)
0894       1             LoadVar(index 0)
0895       1             LoadVar(index 3)
0896       1             Literal(lit 1)
0897       1             BinOp(op '-')
0898       1             LoadVar(index 4)
0899       1             StoreVar(index 0)
089a       1             Pop(count 1)
089b       3             Literal(3)
089e       2             Call(count 3)
08a0       1             Pop(count 1)
08a1       1             LoadGlobal [4]
08a2       1             Literal(lit undefined)
08a3       1             LoadVar(index 0)
08a4       1             Literal(lit 2)
08a5       2             Call(count 3)
08a7       1             Pop(count 1)
08a8       1             LoadGlobal [4]
08a9       1             Literal(lit undefined)
08aa       1             LoadVar(index 0)
08ab       1             Literal(lit 1)
08ac       1             BinOp(op '-')
08ad       1             LoadVar(index 3)
08ae       1             StoreVar(index 0)
08af       1             Literal(lit 1)
08b0       2             Call(count 3)
08b2       1             Pop(count 1)
08b3       1             LoadGlobal [4]
08b4       1             Literal(lit undefined)
08b5       1             LoadVar(index 0)
08b6       1             Literal(lit 1)
08b7       2             Call(count 3)
08b9       1             Pop(count 1)
08ba       3             Literal(&00ea)
08bd       1             LoadVar(index 1)
08be       1             StoreVar(index 0)
08bf       1             Pop(count 1)
08c0       1             LoadGlobal [4]
08c1       1             Literal(lit undefined)
08c2       1             LoadVar(index 0)
08c3       1             Literal(lit 1)
08c4       1             BinOp(op '+')
08c5       1             LoadVar(index 3)
08c6       1             StoreVar(index 0)
08c7       3             Literal(&014e)
08ca       2             Call(count 3)
08cc       1             Pop(count 1)
08cd       1             LoadGlobal [4]
08ce       1             Literal(lit undefined)
08cf       1             LoadVar(index 0)
08d0       1             Literal(lit 1)
08d1       1             BinOp(op '-')
08d2       1             LoadVar(index 3)
08d3       1             StoreVar(index 0)
08d4       3             Literal(&00ea)
08d7       2             Call(count 3)
08d9       1             Pop(count 1)
08da       1             Literal(lit undefined)
08db       1             Return()
08dc   24  - # Globals
08dc       2     [0]: &01ee
08de       2     [1]: NaN
08e0       2     [2]: &0902
08e2       2     [3]: &01f8
08e4       2     [4]: &01fc
08e6       2     [5]: false
08e8       2     [6]: &0256
08ea       2     [7]: &0286
08ec       2     [8]: &02a4
08ee       2     [9]: &0362
08f0       2     [10]: &03ee
08f2       2     [11]: &0470
08f4       2     [12]: &05ba
08f6       2     [13]: &068a
08f8       2     [14]: &075a
08fa       2     [15]: &082c
08fc       2     [16]: &0866
08fe       2     Handle: &090c
0900   14  - # GC allocations
0900       2     Header [Size: 8, Type: TC_REF_PROPERTY_LIST]
0902    8  -     # TsPropertyList
0902       2         dpNext: null
0904       2         dpProto: null
0906       2         key: &002e
0908       2         value: &0200
090a       2     Header [Size: 8, Type: TC_REF_PROPERTY_LIST]
090c    8  -     # TsPropertyList
090c       2         dpNext: null
090e       2         dpProto: null
0910       2         key: &0036
0912       2         value: &0208